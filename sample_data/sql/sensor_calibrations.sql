create table if not exists SITE_INSTRUMENTATION as from read_csv('./sample_data/src/SITE_INSTRUMENTATION.csv', AUTO_DETECT=true) ;
create table if not exists SENSOR_SLOT_IDS as from read_csv('./sample_data/src/SENSOR_SLOT_IDS.csv', AUTO_DETECT=true) ;
create table if not exists CALIB_FACTORS as select *, strptime(START_DATETIME, '%d-%m-%Y %H:%M') as START_TIMESTAMP,
    strptime(END_DATETIME, '%d-%m-%Y %H:%M') as END_TIMESTAMP from read_csv('./sample_data/src/calib_factors_nr01_anem.csv', AUTO_DETECT=true) ;
create table if not exists TS_DEFS as from read_csv('./sample_data/src/TIMESERIES_DEFS.csv', AUTO_DETECT=true) ;
create table if not exists TS as from read_csv('./sample_data/src/TIMESERIES_IDS.csv', AUTO_DETECT=true) ;

COPY(
select SENSOR_SLOT_IDS.INSTRUMENT_ID as INSTRUMENT_ID,
    INSTANCE,
    SERIAL_NUMBER,
    VARIABLE,
    TS.TIMESERIES_ID,
    DESCRIPTION,
    strftime(START_TIMESTAMP, '%Y-%m-%dT%H:%M:%SZ') as START_TIMESTAMP,
    strftime(END_TIMESTAMP, '%Y-%m-%dT%H:%M:%SZ') as END_TIMESTAMP,
    CORRECTION_ID,
    CORRECTION_FACTOR,
FROM CALIB_FACTORS
INNER JOIN TS_DEFS ON TS_DEFS.PARAMETER_ID==CALIB_FACTORS.VARIABLE AND TS_DEFS.PROCESS_LEVEL=='RAW'
INNER JOIN TS ON TS.SITE_ID == CALIB_FACTORS.SITE_ID and TS.PARAMETER_ID == CALIB_FACTORS.VARIABLE and TS.TIMESERIES_DEF == TS_DEFS.TIMESERIES_DEF
LEFT JOIN SENSOR_SLOT_IDS on TS.SENSOR_SLOT_ID == SENSOR_SLOT_IDS.SENSOR_SLOT_ID
INNER JOIN SITE_INSTRUMENTATION
ON CALIB_FACTORS.SITE_ID == SITE_INSTRUMENTATION.SITE_ID AND
    TS.SENSOR_SLOT_ID == SITE_INSTRUMENTATION.SENSOR_SLOT_ID AND
    CALIB_FACTORS.END_TIMESTAMP >= SITE_INSTRUMENTATION.START_DATETIME AND
   CALIB_FACTORS.END_TIMESTAMP <= SITE_INSTRUMENTATION.END_DATETIME
) TO './build/sensor_calibrations.csv' (HEADER, DELIMITER ',') ;
