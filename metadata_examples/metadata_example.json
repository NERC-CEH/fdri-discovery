{
	"projects": {
		"cosmos": {
			"project_metadata_eg1": "Hello",
			"project_metadata_eg2": "There",
			"sites": {
				"BUNNY": {
					"site_name": "Bunny Park",
					"site_opened": "2015-01-27",
					"site_closed": "NA",
					"easting": 123,
					"northing": 456,
					"site_type": "Recharge", # Good to include site type. Imagine each type may have different defined site metadata. One site might be "AWS" + "Evaporation", so multiple types (recharge is made up of a numbe of things_
					"altitude": 1,
					"region": "South east",
					"land_cover": "Agriculture",
					"land_cover_start": "2019-10-01", # May have history of different land covers - could hve land cover history potentially. Project needs to decide if this is general or specific metrics from LCM, etc.
					"soil_type": "Mineral soil", # Will have lots of metadata specific to the project
					etc..  
					"site_description": "Grassland turned agriculture on organic farm",
					"standard_layout": "No, sensor X installed at Y depth", # This should go with the site type metadata - deviations from a standard set up
					"time_series": {
						"time_series_id:TA_1MIN": {  # Should follow some standards (semantics?)  # What about possibility of same site measuring same thing multiple times, e.g. multiple temperature sensors? Consider variable naming convention: https://www.europe-fluxdata.eu/home/guidelines/how-to-submit-data/variables-codes
							"variable": "TA"  # Should follow some standards (semantics?) - link to some reference metadata for this variable? 					
							"measured_units": "degC", # Link reference metadata which itself would include a description
							"measured_resolution": "PT1M", # Reference metadata
							"measured_periodicity": "PT1M", # Reference metadata
							"measurement_type": "instantaneous", # Reference metadata, just decribing how the values represent the variable over the time period
							"derivation": "raw", # Some identifier to show if this was measured from a sensor or derived from another series - would this get too complicated for e.g. daily data, if user wants to find sensor information? It would at least help to show that it was derived from 1 minute data - can include excertp of time series metadata for original series?
							"measurement_time": "NA", # E.g. mean of preceding timestep - I believe the is something in timeseriesml dfining this - e.g. anchor point?
							"timezone": "UTC",
							"description": "1 minute air temperature", # Automated description based on other metadata?
							"dtype": "float",
							
							"sensor_history": [ # Possibility that sensors move from site to site OR modify
								{
									"sensor_id": "sensor123456", { # Sensor-specific information based on serial number/ID of this exact sensor. 
										"location": "BUNNY",
										"from": "2015-01-27", # Location datetime
										"to": "NA",	# Location datetime									
										
										"sensor_retirement_date": "12/12/2040", # Defined by the sensor model’s estimated length of service and the manufacture date of the specific sensor
										
										# Potential to link to metadata describing a standard FDRI deployment, e.g. as might be captured in field protoco? Or leave that in a document?
									
										# Metadata on any specific deviations from usual installation
										
										# May need history of sensor modifications, which could include changes of location, change of a filter or cable, or calibrations
										"modification_type": "filter swap", # History of maintenance/swap/change type  - why the sensor was changed - assume this goes with the new sensor, and will depend on what is captured in the asset managment system
										"modification_description": "in-house swap", # Detail of sensor position if moved?
										"modification_datetime": "2022-02-02",
										
										"sensor_position": "West facing, mounted on tripod",
										"sensor_height": "2.6 m above ground", # This should generally be the same for all FDRI installations, but useful to capture any variation from the standard
										"sensor_variations": "3 m cable", # And anything non standard about this deployment
										# Other sensor specific metadata e.g. comms type, manufacture date, asset number, GDPR info, acquired date, instrument status, description
								
																		
										"sensor_model": "HMP155A", { # Generic information about the type of sensor. Link to external metadata, or embed in full
										# sensor model metadata - anything common to this model
											"sensor_type": "Thermometer hygrometer": # Note that this sensor records multiple variables - air temperature and humidity
											"sensor_make": "Vaisala",
											"sensor_alias": "HMP", # Potentially multiple aliases
											"related_instrument": "Radiation shield", # Allow multiple related instruments
											"key_words": "Air temperature", # Allow multiple variables
											
											# Need array of variables and their relevant attributes here
											"operational_range": "–40 to 80 °C", # Separate max and min fields?
											"observable_range": "To 2000 Wm-2", # Separate max and min fields? Could be different for different sensor variables.
											"measurement_uncertainty": "±100", # For this variable only - link to sensor list of all variables each with uncertainty
											"measurement_dependencies": "Requires sampling area above canopy"
											"settle_in_period": "1 day", # In standardised unit
											"sensor_error_code": "-9111",
											# Include sensor modification requirements, e.g. requires cleaning every 3 months; requires calibration every 2 years... produces due dates
										},						
									
									
										# more metadata for sensor... probably linked to a sensor metadata store
										# or would this be a separate histort of firmware, etc., as it is in theory indepedent from the sensor?
										# Separate info for each of the below, or potentially a single "sensor configuration" to cover all?
										# Firmware history block
										"sensor_firmware": "2.634.2",
										"firmware_from": "2016-01-01",
										"firmware_to": "2017-01-01",
										# Config history block
										"sensor_config": "config X", # Config is the setup of the sensors / site / logger. May change independently of the sensor deployment
										"config_from": "2016-01-01",
										"config_to": "2017-01-01",
										"config_comment": "set internally on setup",
										
										"sensor_software": "Hukseflux PretendPro v1.2.1", # Might change over time and between sensors of this model?
										"sensor_from": "2016-01-01",
										"sensor_to": "2024-01-01",
										
										"sampling_regime": "Sampled every second over representative canopy", # Should always be deployed this way
										"regime_from": "2016-01-01",
										"regime_to": "2024-01-01",
									}
								}, 
							]
							
							"corrections_config": [  # Does the sensor metadata "own" this - i.e. changing a sensor may change these? Or can that be handled at this level? 
								{ # Pull any sensor-specific calibration coefficients from coefficient history PRIOR to corrections?
									"correction_type": "Sensor calibration", # Or site calibration, or data error... # Link to correction type descriptions
									"method_id": "MULTIPLY",
									"from": "2015-01-27",
									"to": "2015-04-15",
									"correction_factor": 1.0245,  # example - maybe calibration was wrong for this period or something
								} # Include site-specific calibrations e.g. soil type (lab results data)
							],
							"qc_config": [  # Does the sensor metadata "own" this - i.e. changing a sensor may change these? Or can that be handled at this level? 
								{ # Pull in sensor-specific ranges and modification requirements?
									"method_id": "RANGE",
									"from": "2015-01-27",
									"to": "NA",
									"min_value": -30,
									"max_value": 50,
								},
								{
									"method_id": "SPIKE", # Link to QC method descriptions
									"from": "2015-01-27",
									"to": "2018-03-31",  # Imagining that a new spike threshold has been determined for whatever reason
									"spike_threshold": 10,
								},
								{
									"method_id": "SPIKE",
									"from": "2018-03-31",
									"to": "NA",
									"spike_threshold": 20,
								},
							]
							"fault_flagging": [  # Affects specific variable, but pulled from database where the fault potentially affects whole sensor
								{ 
									"flag_id": "REMOVE", # Perhaps not how this will work - but flag vs remove data?
									"from": "2015-01-27",
									"to": "2015-04-15",
									"flag_type": "Fault",  # Or 'disruption' or otherwise for sensor/site/data issue
									"flag_description": "Cow ate it" # Pulled from separate issue tracking?
									# Description of problem and resolution. May need internal description / action and a public one
								}
							],
							"infill_config": [ 
								{ 
									"method_id": "METHOD_X", # Link to infill method descriptions
									"from": "2015-01-27",
									"to": "NA",
								}
							],
						}
					},
				}
			}
		},
		"nrfa": {
			"project_metadata_eg1": "Hello",
			"project_metadata_eg2": "There",
			"sites": {
				"28022": {
					"site_name": "Trent at North Muskham",
					"site_opened": "1966-09-01",
					"site_closed": "NA",
					"hydrometric_area": "28 - Trent", # Will have lots of metadata specific to the project
					etc..
					"time_series": {
						"time_series_id:Q_1D": {
							"variable": "flow"
							"measured_units": "m3/s",
							"measured_resolution": "PT1D",
							"measured_periodicity": "PT1D",
							"measurement_type": "mean",
							"timezone": "UTC",
							"dtype": "float",
							"sensor_history": [ # Possibility that sensors move from site to site
								{
									"sensor_id": "VelocityAreaStation",  # We probably won't know the ID of these sensors.  If we're using them like this, would need to be unique somehow?
									"from": "1968-01-01",  # Might not know exact dates for these things
									"to": "1996-01-01",	
									...
								},
								{
									"sensor_id": "UltrasonicGauge", 
									"from": "1996-01-01",
									"to": "NA",
									...
								},
							]
						}
					}		
				},
			}
		}
	}
}
